{
  "name": "popfun",
  "version": "0.1.2",
  "description": "pop array, if last element is function",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "tap test/*.js"
  },
  "devDependencies": {
    "tap": "0.4.x"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/michaelnisi/popfun.git"
  },
  "engines": {
    "node": "0.10.x"
  },
  "keywords": [
    "pop",
    "callback",
    "array"
  ],
  "author": {
    "name": "Michael Nisi",
    "email": "michael.nisi@gmail.com",
    "url": "http://michaelnisi.com"
  },
  "license": "MIT",
  "readme": "# popfun - pop fun off\n\n[![Build Status](https://secure.travis-ci.org/michaelnisi/popfun.png)](http://travis-ci.org/michaelnisi/popfun) [![devDependency Status](https://david-dm.org/michaelnisi/popfun/dev-status.png)](https://david-dm.org/michaelnisi/popfun#info=devDependencies)\n\nThe popfun node module removes the last element from an array and returns that value to the caller, if the element is of type 'function'; for example, the callback in an arguments array.\n\n## Usage\n```js\nvar popfun = require('popfun')\n\nfunction echo () {\n  var args = Array.prototype.slice.call(arguments)\n    , callback = popfun(args)\n  \n  if (callback) callback(null, args.join(' '))\n}\n\necho('hey', 'you', function (err, msg) {\n  console.log(msg)\n})\n```\n## API\n\n### popfun(args)\n\n- `args` Object to pop if last element is of type 'function'\n\nReturns function or null.\n\n## Installation\n\n[![npm](https://nodei.co/npm/popfun.png?compact=true)](https://npmjs.org/package/popfun) \n\n## License\n\n[MIT License](https://raw.github.com/michaelnisi/popfun/master/LICENSE)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/michaelnisi/popfun/issues"
  },
  "_id": "popfun@0.1.2",
  "dist": {
    "shasum": "48007f9381dfb73e902ca093863d4ca16fd7c1da"
  },
  "_from": "popfun@0.1.x",
  "_resolved": "https://registry.npmjs.org/popfun/-/popfun-0.1.2.tgz"
}
